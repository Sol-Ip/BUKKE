<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="reservationMapper">
	<resultMap type="Reservation" id="reservationMap">
		<id property="reservationNo" column="RESERVATION_NO"></id>
		<result property="reservationId" column="RESERVATION_ID"></result>
		<result property="classNo" column="CLASS_NO"></result>
		<result property="activityNo" column="ACTIVITY_NO"></result>
		<result property="reservationDate" column="RESERVATION_DATE"></result>
		<result property="reservationStatus" column="RESERVATION_STATUS"></result>
		<result property="payStatus" column="PAY_STATUS"></result>
		<result property="reviewStatus" column="REVIEW_STATUS"></result>
		<result property="commentStatus" column="COMMENT_STATUS"></result>
		
		<collection property="bukkeClass" resultMap="bClassResultMap" />
		<collection property="activity" resultMap="ActivityResultMap" />
		
	</resultMap>
	
	<resultMap type="BukkeClass" id="bClassResultMap">
		<id property="classNo" column="CLASS_NO"></id>
		<result property="shopId" column="SHOP_ID"></result>
		<result property="className" column="CLASS_NAME"></result>
		<result property="classAddr" column="CLASS_ADDR"></result>
		<result property="classType" column="CLASS_TYPE"></result>
		<result property="classTypedetails" column="CLASS_TYPEDETAILS"></result>
		<result property="classInfo" column="CLASS_INFO"></result>
		<result property="classPrice" column="CLASS_PRICE"></result>
		<result property="classCapacity" column="CLASS_CAPACITY"></result>
		<result property="classEnrollDate" column="CLASS_ENROLL_DATE"></result>  
		<result property="classStartDate" column="CLASS_START_DATE"></result>
		<result property="classEndDate" column="CLASS_END_DATE"></result>
		<result property="classStartTime" column="CLASS_START_TIME"></result>
     	<result property="classEndTime" column="CLASS_END_TIME"></result> 
		<result property="classStatus" column="CLASS_STATUS"></result>
		<result property="cOriginalFilename" column="C_ORIGINAL_FILENAME"></result>
		<result property="cRenameFilename" column="C_RENAME_FILENAME"></result>
	</resultMap>
	
	<resultMap type="Activity" id="ActivityResultMap">
		<id property="activityNo" column="ACTIVITY_NO"></id>
		<result property="shopId" column="SHOP_ID"></result> 
		<result property="activityName" column="ACTIVITY_NAME"></result> 
		<result property="activityAddr" column="ACTIVITY_ADDR"></result> 
		<result property="activityType" column="ACTIVITY_TYPE"></result> 
		<result property="activityTypeDetails" column="ACTIVITY_TYPEDETAILS"></result> 
		<result property="activityTypeDetailCodes" column="ACTIVITY_TYPEDETAIL_CODE"></result> 
		<result property="activityInfo" column="ACTIVITY_INFO"></result> 
		<result property="activityPrice" column="ACTIVITY_PRICE"></result>
		<result property="activityCapacity" column="ACTIVITY_CAPACITY"></result> 
		<result property="activityEnrolldate" column="ACTIVITY_ENROLL_DATE"></result> 
		<result property="activityStartdate" column="ACTIVITY_START_DATE"></result> 
		<result property="activityEnddate" column="ACTIVITY_END_DATE"></result>
		<result property="`" column="ACTIVITY_STATUS"></result> 
		<result property="aOriginalFilename" column="A_ORIGINAL_FILENAME"></result> 
		<result property="aRenameFilename" column="A_RENAME_FILENAME"></result> 
	</resultMap>
	
	 
	<!-- 게시물 리스트 -->
   <select id="selectListCount" resultType="_int">
      SELECT COUNT(*) FROM RESERVATION
   </select>
  
   
   <!-- 
   <select id="selectAllList" resultMap="reservationMap">
      SELECT RESERVATION_NO, RESERVATION_ID, RESERVATION_STATUS, (SELECT CLASS_NAME FROM CLASS WHERE CLASS_NO = #{classNo }) AS "CLASS_NAME", RESERVATION_DATE FROM RESERVATION
   </select>
    -->
      <select id="selectAllList" resultMap="reservationMap">
      SELECT RESERVATION.RESERVATION_NO,RESERVATION.CLASS_NO,null as ACTIVITY_NO, RESERVATION.RESERVATION_ID, RESERVATION.RESERVATION_STATUS, CLASS.CLASS_NAME, null as ACTIVITY_NAME, RESERVATION.RESERVATION_DATE
          FROM RESERVATION,  CLASS
          WHERE (RESERVATION.CLASS_NO = CLASS.CLASS_NO) AND (PAY_STATUS = 'N') AND (CLASS.SHOP_ID = #{shopId})
      UNION
	SELECT RESERVATION.RESERVATION_NO,null as CLASS_NO,RESERVATION.ACTIVITY_NO, RESERVATION.RESERVATION_ID, RESERVATION.RESERVATION_STATUS,null as_CLASS_NAME, ACTIVITY.ACTIVITY_NAME, RESERVATION.RESERVATION_DATE 
		 FROM RESERVATION, ACTIVITY
		WHERE (RESERVATION.ACTIVITY_NO = ACTIVITY.ACTIVITY_NO) AND (PAY_STATUS = 'N') AND (activity.SHOP_ID = #{shopId})
   	  </select>
         <!-- SELECT RESERVATION.RESERVATION_NO, RESERVATION.RESERVATION_ID, RESERVATION.RESERVATION_STATUS, CLASS.CLASS_NAME, ACTIVITY.ACTIVITY_NAME, RESERVATION.RESERVATION_DATE
	       FROM RESERVATION, CLASS, ACTIVITY
	       WHERE RESERVATION.CLASS_NO = CLASS.CLASS_NO, RESERVATION.ACTIVITY_NO = ACTIVITY.ACTIVITY_NO -->
   <!-- <select id="selectOneBclass" resultMap="bClassResultMap">
   	SELECT * FROM CLASS WHERE CLASS_NO = #{classNo } AND CLASS_STATUS = 'Y'
   </select>-->
   
   <!-- 액티비티 예약하기(등록) -->
   <insert id="insertActivityReservation">
   	INSERT INTO RESERVATION VALUES (SEQ_RESERVATION_NO.NEXTVAL, #{reservationId}, NULL, #{activityNo}, DEFAULT, DEFAULT, DEFAULT)
   </insert>
   
   <!-- 액티비티 예약 확인 -->
   <select id="selectOneReservation" resultMap="reservationMap">
   SELECT * FROM RESERVATION WHERE ACTIVITY_NO = #{activityNo} AND RESERVATION_ID = #{reservationId}
   </select>
   
   <!-- 액티비티 예약 취소(삭제) -->
	<delete id="deleteActivityReservation">
	DELETE FROM RESERVATION WHERE RESERVATION_NO = #{reservationNo} AND ACTIVITY_NO = #{activityNo}
	</delete>
   
   <update id="reInsertActivityReservation">
   UPDATE RESERVATION SET RESERVATION_STATUS = '대기' WHERE ACTIVITY_NO = #{activityNo} AND RESERVATION_ID = #{reservationId}
   </update>
   
   <!-- 클래스 예약하기 -->
   <insert id="insertClassReservation">
   	INSERT INTO RESERVATION VALUES (SEQ_RESERVATION_NO.NEXTVAL, #{reservationId}, #{classNo}, NULL, DEFAULT, DEFAULT, DEFAULT)
   </insert>
   
   <!-- 클래스 예약 확인 -->
   <select id="selectOneClassReservation" resultMap="reservationMap">
   SELECT * FROM RESERVATION WHERE CLASS_NO = #{classNo} AND RESERVATION_ID = #{reservationId}
   </select>
   
   <!-- 클래스 예약 취소하기 -->
   <delete id="deleteClassReservation">
	DELETE FROM RESERVATION WHERE RESERVATION_NO = #{reservationNo} AND CLASS_NO = #{classNo}
	</delete>
   
   <!-- 예약 승인 -->
   <update id="confirmReservation">
   UPDATE RESERVATION SET
   RESERVATION_STATUS = '승인' 
   WHERE RESERVATION_NO = #{reservationNo}
   </update>
   
   <!-- 예약 거절 -->
   <update id="rejectReservation">
   UPDATE RESERVATION SET
   RESERVATION_STATUS = '거절' 
   WHERE RESERVATION_NO = #{reservationNo}
   </update>
   
   
   <!-- 내 예약 카운트 -->
      <select id="reservationCountMyId" resultType="_int">
      SELECT COUNT(*) FROM RESERVATION WHERE RESERVATION_ID=#{memberId}
      </select>
      
   <!-- 내 예약 리스트-->
   <select id="reservationListMyId" resultMap="reservationMap" >
      <!-- SELECT * FROM RESERVATION WHERE RESERVATION_ID=#{memberId} -->
   <!-- SELECT RESERVATION.RESERVATION_STATUS,RESERVATION.CLASS_NO,null as ACTIVITY_NO, RESERVATION.RESERVATION_ID,  CLASS.CLASS_NAME, null as ACTIVITY_NAME, NULL AS ACTIVITY_START_DATE, CLASS_START_DATE, NULL AS ACTIVITY_TYPE, CLASS_TYPE, NULL AS ACTIVITY_TYPEDETAILS, CLASS_TYPEDETAILS, NULL AS ACTIVITY_PRICE,CLASS_PRICE
      FROM RESERVATION,  CLASS
      WHERE (RESERVATION.CLASS_NO = CLASS.CLASS_NO)AND(RESERVATION_ID = #{memberId})
      UNION
      SELECT RESERVATION.RESERVATION_STATUS,null as CLASS_NO,RESERVATION.ACTIVITY_NO, RESERVATION.RESERVATION_ID, null as_CLASS_NAME, ACTIVITY.ACTIVITY_NAME, ACTIVITY_START_DATE, NULL AS CLASS_START_DATE, ACTIVITY_TYPE, NULL AS CLASS_TYPE,  ACTIVITY_TYPEDETAILS, NULL AS CLASS_TYPEDETAILS, ACTIVITY_PRICE,NULL AS CLASS_PRICE
      FROM RESERVATION, ACTIVITY
      WHERE (RESERVATION.ACTIVITY_NO = ACTIVITY.ACTIVITY_NO) AND (RESERVATION_ID = #{memberId}) -->
      
        SELECT RESERVATION.PAY_STATUS,RESERVATION.RESERVATION_NO, RESERVATION.RESERVATION_STATUS,RESERVATION.CLASS_NO,null as ACTIVITY_NO, RESERVATION.RESERVATION_ID,  CLASS.CLASS_NAME, null as ACTIVITY_NAME, NULL AS ACTIVITY_START_DATE, CLASS_START_DATE, NULL AS ACTIVITY_TYPE, CLASS_TYPE, NULL AS ACTIVITY_TYPEDETAILS, CLASS_TYPEDETAILS, NULL AS ACTIVITY_PRICE,CLASS_PRICE,NULL AS ACTIVITY_END_DATE , CLASS_END_DATE, RESERVATION.RESERVATION_DATE 
      FROM RESERVATION,  CLASS
      WHERE (RESERVATION.CLASS_NO = CLASS.CLASS_NO)AND(RESERVATION_ID = #{memberId})
      UNION
      SELECT RESERVATION.PAY_STATUS,RESERVATION.RESERVATION_NO, RESERVATION.RESERVATION_STATUS,null as CLASS_NO,RESERVATION.ACTIVITY_NO, RESERVATION.RESERVATION_ID, null as_CLASS_NAME, ACTIVITY.ACTIVITY_NAME, ACTIVITY_START_DATE, NULL AS CLASS_START_DATE, ACTIVITY_TYPE, NULL AS CLASS_TYPE,  ACTIVITY_TYPEDETAILS, NULL AS CLASS_TYPEDETAILS, ACTIVITY_PRICE,NULL AS CLASS_PRICE, ACTIVITY_END_DATE, NULL AS CLASS_END_DATE, RESERVATION.RESERVATION_DATE
      FROM RESERVATION, ACTIVITY
      WHERE (RESERVATION.ACTIVITY_NO = ACTIVITY.ACTIVITY_NO) AND (RESERVATION_ID = #{memberId})
      </select>
   
   
   <!-- 클래스 카운트 -->
    <select id="classCountReservation" resultType="_int">
   SELECT COUNT (*) AS ACT_RES_COUNT FROM RESERVATION WHERE RESERVATION_ID = #{memberId} AND CLASS_NO IS NOT NULL AND RESERVATION_STATUS='승인'
   </select> 
   
   <!-- 액티비티 카운트 -->
    <select id="actCountReservation" resultType="_int">
    SELECT COUNT (*) AS ACT_RES_COUNT FROM RESERVATION WHERE RESERVATION_ID = #{memberId} AND ACTIVITY_NO IS NOT NULL AND RESERVATION_STATUS='승인'
   </select> 
   
   <!-- 결제여부 변경(액티비티) -->
    <update id="changeStatus">
		UPDATE RESERVATION
		SET PAY_STATUS = 'Y' 
		WHERE RESERVATION_NO = #{reservationNo } AND ACTIVITY_NO = #{activityNo }
	</update>  
   
   <!-- 결제여부 변경(클래스) -->
   <update id="changeStatusClass">
   		UPDATE RESERVATION
		SET PAY_STATUS = 'Y' 
		WHERE RESERVATION_NO = #{reservationNo } AND CLASS_NO = #{classNo }
   </update>
</mapper>