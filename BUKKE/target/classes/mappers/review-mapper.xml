<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="reviewMapper">

	<resultMap type="Review" id="reviewResultMap">
		<id property="reviewNo" column="REVIEW_NO"></id>
		<result property="memberId" column="MEMBER_ID"></result>
		<result property="reviewTitle" column="REVIEW_TITLE"></result>
		<result property="reviewContents" column="REVIEW_CONTENTS"></result>
		<result property="reviewDate" column="REVIEW_DATE"></result>
		<result property="reviewStatus" column="REVIEW_STATUS"></result>
		<result property="rOriginalFilename" column="R_ORIGINAL_FILENAME"></result>
		<result property="rRenameFilename" column="R_RENAME_FILENAME"></result>
		<result property="classNo" column="CLASS_NO"></result>
		<result property="activityNo" column="ACTIVITY_NO"></result>
		
		
	</resultMap>
	
	<select id="selectListCount" resultType="_int">
      SELECT COUNT(*) FROM REVIEW WHERE REVIEW_STATUS = 'Y'
   </select>
	
	<select id="selectReviewList" resultMap="reviewResultMap">
		SELECT * FROM REVIEW WHERE REVIEW_STATUS = 'Y' ORDER BY REVIEW_NO DESC
	</select>
	
	<select id="selectOne" resultMap="reviewResultMap">
		SELECT * FROM REVIEW WHERE REVIEW_NO = #{reviewNo }
	</select>
	
	 
	<insert id="insertReview" parameterType="Review">
		INSERT INTO REVIEW VALUES(SEQ_REVIEWID.NEXTVAL,  #{memberId }, #{reviewTitle }, #{reviewContents }, SYSDATE, 'Y', #{rOriginalFilename },#{rRenameFilename },null,null)
	</insert>
	
	
	<update id="updateReview">
		UPDATE REVIEW
		SET REVIEW_TITLE = #{reviewTitle }, REVIEW_CONTENTs = #{reviewContents }, R_ORIGINAL_FILENAME = #{rOriginalFilename }, R_RENAME_FILENAME = #{rRenameFilename },REVIEW_DATE = SYSDATE
		WHERE REVIEW_NO = #{reviewNo }
	</update>

	<update id="deleteReview" parameterType="_int">
		UPDATE REVIEW
		SET REVIEW_STATUS = 'N'
		WHERE REVIEW_NO = #{reviewNo }
	</update>
	
	<select id="selectSearchList" resultMap="reviewResultMap">
		SELECT * FROM REVIEW
		<if test="reviewCategory.toString() == 'writer'">
			WHERE MEMBER_ID LIKE '%' || #{reviewKeyword } || '%'
		</if>
		<if test="reviewCategory.toString() == 'title'">
			WHERE REVIEW_TITLE LIKE '%' || #{reviewKeyword } || '%'
		</if>
		<if test="reviewCategory.toString() == 'content'">
			WHERE REVIEW_CONTENTS LIKE '%' || #{reviewKeyword } || '%'
		</if>
		<if test="reviewCategory.toString() == 'all'">
			WHERE MEMBER_ID LIKE '%' || #{reviewKeyword } || '%'
			OR REVIEW_TITLE LIKE '%' || #{reviewKeyword } || '%'
			OR REVIEW_CONTENTS LIKE '%' || #{reviewKeyword } || '%'
		</if>
		ORDER BY REVIEW_DATE DESC
	</select>
	
	<!-- 댓글 관련 부분 -->
	<resultMap type="reviewComment" id="commentResultMap">
		<id property="commentNo" column="COMMENT_NO"/>
		<result property="memberId" column="MEMBER_ID" />
		<result property="reviewNo" column="REVIEW_NO" />
		<result property="commentContents" column="COMMENT_CONTENTS" />
		<result property="commentDate" column="COMMENT_DATE" />
		<result property="commentStatus" column="COMMENT_STATUS" />
	</resultMap>
	
	<insert id="insertComment">
		INSERT INTO REVIEW_COMMENT
		VALUES(SEQ_REVIEW_COMMENT.NEXTVAL, #{memberId }, #{reviewNo }, #{commentContents }, SYSDATE, 'Y')
	</insert>
	
	<update id="deleteComment">
		UPDATE REVIEW_COMMENT
		SET COMMENT_STATUS = 'N'
		WHERE REVIEW_NO = #{reviewNo } AND COMMENT_NO = #{commentNo }
	</update>
	
	<select id="selectCommentList" resultMap="commentResultMap">
		SELECT * FROM REVIEW_COMMENT
		WHERE REVIEW_NO = #{reviewNo }
		AND COMMENT_STATUS = 'Y'
		ORDER BY COMMENT_NO DESC
	</select>

</mapper>